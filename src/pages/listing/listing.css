@value pure: "../../_pure.css";
@value icons_css: "../../icons.css";
@value layout_css: "../layout/layout.css";
@value buttons_css: "../../buttons.css";
@value header: "../layout/header.css";

@value anchor: #446;
@value iconTransition: color 0.2s ease-in;

.ellipsisOverflow {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.listing {
    width: 100%;

    border-right: solid 1px #CCC;
    background: #EEE;
}

.crumbs {
    composes: lightsep from header;
    overflow: hidden;
    position: relative;
    padding: 0.3em 20px;
}

.body {
    composes: body from layout_css;
    composes: contentWidth from layout_css;
    
    padding: 20px 0 0 20px;
    min-width: 600px;
    width: 90%;
}

/* Metadata controls */
.search {
    composes: global(pure-u-3-5);
    position: relative;
    margin-bottom: 1em;
}

.searchInput {
    width: 100%;
    padding: 5px;
}

.searchClear {
    position: absolute;
    right: 0;

    width: 32px;
    height: 32px;
    padding: 0;
    margin: 0;

    background: none;
    border: none;
}

.searchClear:after {
    content: "+";

    display: inline-block;
    font-size: 28px;
    transform: rotate(45deg);
}

.manage {
    composes: global(pure-u-2-5);
    composes: ellipsisOverflow;

    text-align: right;
}

.itemsPerLabel {
    padding-left: 20px;
}

.itemsPer {
    max-width: 100px;
}

.metas {
    composes: global(pure-g);
    position: relative;

    margin: 0 auto;
    padding: 0 0 1em 0;

    border-bottom: solid 1px #CCC;
    width: 100%;
}

.pages {
    composes: global(pure-u-16-24);
    composes: ellipsisOverflow;
}

.pages *:not(:first-child) {
    margin-left: 20px;
}

.nextPage {
    composes: secondary from buttons_css;

    text-align: right;
}

.prevPage {
    composes: secondary from buttons_css;
}

.currPage {
    font-size: 18px;
    vertical-align: middle;
}


.add {
    composes: add from buttons_css;
    composes: ellipsisOverflow;
}

.showingResults {
    composes: global(pure-u-1-1);
}



.listContainer {
    composes: global(pure-g);

    width: 100%;
    margin: 0 auto;
}

.list {
    list-style: none;
    margin: 0 auto;
    padding: 0 0 4em 0;
    width: 100%;
}

.listHeader {
    composes: global(pure-g);

    border-bottom: solid 1px #AAA;
    padding-top: 0.6em;
    font-size: 1.1em;
}


.listHeader .listCell {
    padding-top: 0;
}

.listCell {
    composes: ellipsisOverflow;

    margin: 0;
    padding: 8px 2%;
    line-height: 24px;
}

.listCol1 {
    composes: global(pure-u-9-24);
    composes: listCell;
}

.listCol2 {
    composes: global(pure-u-4-24);
    composes: listCell;
}

.listCol3 {
    composes: global(pure-u-4-24);
    composes: listCell;
}

.listCol4 {
    composes: global(pure-u-4-24);
    composes: listCell;
}

.listCol5 {
    composes: global(pure-u-3-24);
    composes: listCell;

    text-align: right;
}

.listHeader,
.list .item:nth-child(odd) {
    background: rgba(0,0,0,0.025);
}

.item {
    position: relative;

    padding-left: 4px;
    border-bottom: solid 1px #CCC;

    transition: background-color 0.2s ease-in;
}

.item:hover {
    background: #DFDFDF;

    transition: background-color 0.2s ease-in;
}

.itemTitle {
    composes: ellipsisOverflow;

    color: anchor;
    font-size: 1.2em;
}

.published_at {
    composes: item;

    padding-left: 0;
    border-left: solid 4px #68A;
}

.active {
    composes: item;
    background: #FFF;
}

.activePublished {
    composes: published_at;
    composes: active;
}

.anchor {
    composes: global(pure-g);

    text-decoration: none;
    color: anchor;
}

.heading {
    margin: 0 0 0.2em;
}

.date {
    color: #888;
    font-size: 0.8em;
}

.status {
    composes: date;
}

.excerpt {
    margin: 0;

    font-size: 0.8em;
}

.actions {
    display: flex;
    flex-direction: row-reverse;

    justify-content: center;
    align-items: center;
}

.action {
    composes: icon from icons_css;

    flex: 1 1 auto;

    color: anchor;
    text-align: right;
    vertical-align: top;

    transition: iconTransition;
}

.action:hover {
    color: #2F343C;

    transition: iconTransition;
}

.icon {
    composes: action;
}

.remove {
    composes: plain from buttons_css;
}

.removeIcon {
    composes: icon;
}

.removeIcon:hover {
    color: colorRemove from buttons_css;
}

.hidden {
    overflow: visible;
    flex: 0 1 0;
}

.hidden .filter {
    padding: 0;
    overflow: visible;
}