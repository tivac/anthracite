@import "../../../node_modules/codemirror/lib/codemirror.css";

@value layout_css:  "../layout/layout.css";
@value flex_css: "../../flex.css";

@value pad from "../layout/layout.css";

.error {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;

    margin: 0;
    padding: 5px;

    background: red;
    color: whitesmoke;
}

.contentWidth {
    composes: hbox from flex_css;
    composes: contentWidth from layout_css;

    flex-wrap: wrap;
}

.definitions {
    flex: 0 0 50%;
}

.editor {
    composes: input from "../../form.css";

    min-height: 360px;
    background: #fff;
}

/* Override codemirror styling to make it expannnnd */
:global(.CodeMirror) {
    height: auto;
}

.preview {
    flex: 0 0 50%;
    padding-left: pad;
}

.fields {
    composes: global(pure-form), global(pure-form-stacked);
}

.details {
    composes: global(pure-form);

    flex: 0 0 100%;
    margin-top: pad;
}

/* specificity with Pure */
.genSlugs {
    display: block;
    margin-bottom: pad !important;
}

.slug {
    margin-left: 10px;
    transform: scale(1.2);
}

.urlBase {
    composes: hbox from flex_css;
}

.url {
    flex: 1 0 auto;
    padding-left: 10px;
}

.urlInputPreview {
    width: 100%;
}

/* specificity with Pure */
.urlInputError {
    composes: urlInputPreview;

    color: #b94a48;
    border-color: #e9322d !important;
}

.previewUrl {
    flex: 0 0 100%;
    margin-top: 0.6em;

    font-style: italic;
    font-size: 80%;
    color: #666;
}
